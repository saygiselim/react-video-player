[{"C:\\Projects\\Common\\react-video-player\\src\\index.tsx":"1","C:\\Projects\\Common\\react-video-player\\src\\app\\App.tsx":"2","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\VideoPlayer.tsx":"3","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-poster\\VideoPoster.tsx":"4","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-control\\VideoControl.tsx":"5","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-title\\VideoTitle.tsx":"6","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\dropdown\\Dropdown.tsx":"7","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-overlay-control\\VideoOverlayControl.tsx":"8","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\image-select\\ImageSelect.tsx":"9"},{"size":229,"mtime":1608650232817,"results":"10","hashOfConfig":"11"},{"size":2413,"mtime":1608814495275,"results":"12","hashOfConfig":"11"},{"size":6022,"mtime":1608821707939,"results":"13","hashOfConfig":"11"},{"size":278,"mtime":1608813561936,"results":"14","hashOfConfig":"11"},{"size":4766,"mtime":1608813554641,"results":"15","hashOfConfig":"11"},{"size":247,"mtime":1608813567139,"results":"16","hashOfConfig":"11"},{"size":1287,"mtime":1608739401245,"results":"17","hashOfConfig":"11"},{"size":1013,"mtime":1608813558367,"results":"18","hashOfConfig":"11"},{"size":1223,"mtime":1608739583653,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fvteiz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Projects\\Common\\react-video-player\\src\\index.tsx",[],["41","42"],"C:\\Projects\\Common\\react-video-player\\src\\app\\App.tsx",[],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\VideoPlayer.tsx",["43"],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-poster\\VideoPoster.tsx",[],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-control\\VideoControl.tsx",[],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-title\\VideoTitle.tsx",[],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\dropdown\\Dropdown.tsx",["44"],"import { useEffect, useState } from 'react';\r\n\r\nimport './Dropdown.scss';\r\n\r\nexport const Dropdown = (props: DropdownProps) => {\r\n    const [selectedOption, setSelectedOption] = useState(props.selectedOption);\r\n\r\n    useEffect(() => {\r\n        if (selectedOption)\r\n            props.onSelect(selectedOption);\r\n    }, [selectedOption])\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <label className=\"label\">\r\n                {props.label}\r\n            </label>\r\n            <select\r\n                className=\"select\"\r\n                onChange={event => setSelectedOption(props.options[+event.target.value])}\r\n                defaultValue={props.options.indexOf(selectedOption)}>\r\n                {\r\n                    props.options.map(\r\n                        (option, index) =>\r\n                            <option\r\n                                key={index}\r\n                                value={index}>\r\n                                {option[props.textProperty]}\r\n                            </option>\r\n                    )\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface DropdownProps {\r\n    label: string;\r\n    options: any[];\r\n    textProperty: string;\r\n    selectedOption?: any;\r\n    onSelect: (option: any) => void;\r\n}","C:\\Projects\\Common\\react-video-player\\src\\app\\common\\video-player\\video-overlay-control\\VideoOverlayControl.tsx",[],"C:\\Projects\\Common\\react-video-player\\src\\app\\common\\image-select\\ImageSelect.tsx",["45"],"import { useEffect, useState } from 'react';\r\n\r\nimport './ImageSelect.scss';\r\n\r\nexport const ImageSelect = (props: ImageSelectProps) => {\r\n    const [selectedOption, setSelectedOption] = useState(props.selectedOption);\r\n\r\n    useEffect(() => {\r\n        if (selectedOption)\r\n            props.onSelect(selectedOption);\r\n    }, [selectedOption]);\r\n\r\n    return (\r\n        <div className=\"image-select\">\r\n            {\r\n                props.options.map((option, index) =>\r\n                    <div\r\n                        key={index}\r\n                        className={`option ${option[props.imageProperty] === selectedOption[props.imageProperty] ? 'is-selected' : ''}`}\r\n                        onClick={() => setSelectedOption(option)}\r\n                        title={option[props.titleProperty]}>\r\n                        <img\r\n                            src={option[props.imageProperty]}\r\n                            alt={option[props.titleProperty]} />\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ImageSelectProps {\r\n    options: any[];\r\n    imageProperty: string;\r\n    titleProperty: string;\r\n    selectedOption?: any;\r\n    onSelect: (option: any) => void;\r\n}",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":41,"column":8,"nodeType":"52","endLine":41,"endColumn":31,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":11,"column":8,"nodeType":"52","endLine":11,"endColumn":24,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"54","line":11,"column":8,"nodeType":"52","endLine":11,"endColumn":24,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetMouseIdleTimer'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"64","fix":"66"},"Update the dependencies array to be: [resetMouseIdleTimer, videoPlayerElementRef]",{"range":"67","text":"68"},"Update the dependencies array to be: [props, selectedOption]",{"range":"69","text":"70"},{"range":"71","text":"70"},[1780,1803],"[resetMouseIdleTimer, videoPlayerElementRef]",[317,333],"[props, selectedOption]",[326,342]]